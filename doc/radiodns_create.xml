<?xml version="1.0" encoding="UTF-8" ?>
<refentry id="radiodns_create">
  <refmeta>
	<refentrytitle>radiodns_create</refentrytitle>
	<manvolnum>3</manvolnum>
  </refmeta>
  
  <refnamediv>
	<refname>radiodns_create</refname>
	<refpurpose>Create a new RadioDNS context</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
	<funcsynopsis>
	  <funcsynopsisinfo>#include &lt;libradiodns.h&gt;, -lradiodns</funcsynopsisinfo>
	  <funcprototype>
		<funcdef>radiodns_context_t *<function>radiodns_create</function></funcdef>
		<paramdef>const char *<parameter>dnsdomain</parameter></paramdef>
	  </funcprototype>
	  
	  <funcprototype>
		<funcdef>radiodns_context_t *<function>radiodns_create_dab_xpad</function></funcdef>
		<paramdef>unsigned int <parameter>apptype</parameter></paramdef>
		<paramdef>unsigned int <parameter>uatype</parameter></paramdef>
		<paramdef>unsigned int <parameter>scids</parameter></paramdef>
		<paramdef>unsigned long <parameter>sid</parameter></paramdef>
		<paramdef>unsigned int <parameter>eid</parameter></paramdef>
		<paramdef>unsigned int <parameter>ecc</parameter></paramdef>
		<paramdef>const char *<parameter>suffix</parameter></paramdef>
	  </funcprototype>

	  <funcprototype>
		<funcdef>radiodns_context_t *<function>radiodns_create_dab_sc</function></funcdef>
		<paramdef>unsigned int <parameter>pa</parameter></paramdef>
		<paramdef>unsigned int <parameter>scids</parameter></paramdef>
		<paramdef>unsigned long <parameter>sid</parameter></paramdef>
		<paramdef>unsigned int <parameter>eid</parameter></paramdef>
		<paramdef>unsigned int <parameter>ecc</parameter></paramdef>
		<paramdef>const char *<parameter>suffix</parameter></paramdef>
	  </funcprototype>

	  <funcprototype>
		<funcdef>radiodns_context_t *<function>radiodns_create_dab</function></funcdef>
		<paramdef>unsigned int <parameter>scids</parameter></paramdef>
		<paramdef>unsigned long <parameter>sid</parameter></paramdef>
		<paramdef>unsigned int <parameter>eid</parameter></paramdef>
		<paramdef>unsigned int <parameter>ecc</parameter></paramdef>
		<paramdef>const char *<parameter>suffix</parameter></paramdef>
	  </funcprototype>

	  <funcprototype>
		<funcdef>radiodns_context_t *<function>radiodns_create_drm</function></funcdef>
		<paramdef>unsigned long <parameter>sid</parameter></paramdef>
		<paramdef>const char *<parameter>suffix</parameter></paramdef>
	  </funcprototype>

	  <funcprototype>
		<funcdef>radiodns_context_t *<function>radiodns_create_amss</function></funcdef>
		<paramdef>unsigned long <parameter>sid</parameter></paramdef>
		<paramdef>const char *<parameter>suffix</parameter></paramdef>
	  </funcprototype>

	  <funcprototype>
		<funcdef>radiodns_context_t *<function>radiodns_create_hdradio</function></funcdef>
		<paramdef>unsigned long <parameter>tx</parameter></paramdef>
		<paramdef>unsigned int <parameter>cc</parameter></paramdef>
		<paramdef>const char *<parameter>suffix</parameter></paramdef>
	  </funcprototype>

	  <funcprototype>
		<funcdef>radiodns_context_t *<function>radiodns_create_dvb</function></funcdef>
		<paramdef>unsigned int <parameter>onid</parameter></paramdef>
		<paramdef>unsigned int <parameter>tsid</parameter></paramdef>
		<paramdef>unsigned long <parameter>sid</parameter></paramdef>
		<paramdef>unsigned long <parameter>nid</parameter></paramdef>
		<paramdef>const char *<parameter>suffix</parameter></paramdef>
	  </funcprototype>

	</funcsynopsis>

  </refsynopsisdiv>

  <refsection>
	<title>DESCRIPTION</title>
	<para>
	  The <function>radiodns_create</function> family of functions create
	  a new RadioDNS context which can be used as a handle for performing
	  application discovery.
	</para>
	<para>
	  The <function>radiodns_create</function> function in particular
	  creates a context using the specified DNS domain name,
	  <parameter>dnsdomain</parameter>. This is in contrast to the other
	  functions in the family, such as
	  <function>radiodns_create_amss</function>, which use the supplied
	  parameters to <emphasis>generate</emphasis> a domain name.
	</para>
	<para>
	  In all of the below functions, the <parameter>suffix</parameter>
	  parameter may be <constant>NULL</constant> in order to use the
	  default DNS suffix ("radiodns.org"), or may be a string specifying
	  an alternate suffix. The suffix should not contain a leading period.
	</para>
	<para>
	  The <function>radiodns_create_dab_xpad</function> function creates
	  a context for a service using Digital Audio Broadcasting (DAB)
	  identified by an X-PAD application type (<parameter>apptype</parameter>)
	  and user application type (<parameter>uatype</parameter>), in
	  combination with a DAB service component identifier
	  (<parameter>scids</parameter>), service identifier
	  (<parameter>sid</parameter>), ensemble/multiplex identifier
	  (<parameter>eid</parameter>), and extended country code
	  (<parameter>ecc</parameter>).
	</para>
	<para>
	  The <function>radiodns_create_dab_sc</function> function creates
	  a context for a service using DAB identified by an Independent
	  Service Component packet address (<parameter>pa</parameter>), in
	  combination with a DAB service component identifier
	  (<parameter>scids</parameter>), service identifier
	  (<parameter>sid</parameter>), ensemble/multiplex identifier
	  (<parameter>eid</parameter>), and extended country code
	  (<parameter>ecc</parameter>).
	</para>
	<para>
	  The <function>radiodns_create_dab</function> function creates
	  a context for a service using DAB but one which is not delivered
	  via either X-PAD nor an Independent Service Component, and is
	  identified by a DAB service component identifier
	  (<parameter>scids</parameter>), service identifier
	  (<parameter>sid</parameter>), ensemble/multiplex identifier
	  (<parameter>eid</parameter>), and extended country code
	  (<parameter>ecc</parameter>).
	</para>
	<para>
	  The <function>radiodns_create_drm</function> function creates a
	  context for a service using Digital Radio Mondiale (DRM) and
	  identified by a service identifier (<parameter>sid</parameter>).
	</para>
	<para>
	  The <function>radiodns_create_amss</function> function creates a
	  context for a service using AM Signalling System (AMSS) and
	  identified by a service identifier (<parameter>sid</parameter>).
	</para>
	<para>
	  The <function>radiodns_create_hdradio</function> function creates a
	  context for a service using iBiquity Digital Corporation's HD Radio,
	  and identified by a transmitter identifier (<parameter>tx</parameter>)
	  and a country code (<parameter>cc</parameter>).
	</para>
	<para>
	  The <function>radiodns_create_dvb</function> function cerates a
	  context for a service delivered via Digital Video Broadcasting (DVB)
	  and identified by a DVB original_network_id
	  (<parameter>onid</parameter>), transport_stream_id
	  (<parameter>tsid</parameter>), service_id (<parameter>sid</parameter>)
	  and network_id (<parameter>nid</parameter>). Note that the default
	  <parameter>suffix</parameter> value used by this function is
	  currently "tvdns.net" rather than "radiodns.org".
	</para>
  </refsection>
  <refsection>
	<title>USING A RADIODNS CONTEXT</title>
	<para>
	  Once a context has been created, its source domain name (the name
	  specified in the call to <function>radiodns_create</function>, or
	  the name generated by the other functions in the same family) can
	  be retrieved by a call to <function>radiodns_domain</function>.
	  The target domain name can be
	  discovered using <function>radiodns_resolve_target</function>. The
	  target domain name is the fully-qualified domain name which, in
	  the event of <parameter>dnsdomain</parameter> (or its generated
	  equivalent) being a <constant>CNAME</constant> or
	  <constant>DNAME</constant>, is ultimately referred to, accounting
	  for chains of <constant>CNAME</constant> records.
	</para>
	<para>
	  For example, if <function>radiodns_create</function> was called
	  with a <parameter>dnsdomain</parameter> value of
	  <literal>foo.example.com</literal>, and
	  <literal>foo.example.com</literal> was a <constant>CNAME</constant>
	  referring to <literal>bar.example.org</literal>, and this was not
	  itself a <constant>CNAME</constant> or <constant>DNAME</constant>,
	  then the target domain name for the context would be
	  <literal>bar.example.org</literal>.
	</para>
	<para>
	  At any time, <function>radiodns_target</function> can be used to
	  retrieve the currently-stored target domain name: if this function
	  returns <constant>NULL</constant>, no target discovery has been
	  performed yet.
	</para>
	<para>
	  Application discovery can be performed on a context using
	  <function>radiodns_resolve_app</function>. This function queries
	  DNS for specifically-named records which are children of the
	  target associated with the context. Further details are included
	  in the description of the <function>radiodns_resolve_app</function>
	  function itself.
	</para>
  </refsection>
  <refsection>
	<title>RETURN VALUE</title>
	<para>
	  On success, <function>radiodns_resolve_app</function> returns an
	  initialized context pointer. On failure, <literal>NULL</literal> is
	  returned and <varname>errno</varname> is set appropriately. The returned
	  context should be freed once no longer needed with
	  <function>radiodns_destroy</function>.
	</para>
  </refsection>
  
  <refsection>
	<title>SEE ALSO</title>
	<simplelist type="inline">
	  <member>
		<citerefentry>
		  <refentrytitle>radiodns</refentrytitle>
		  <manvolnum>1</manvolnum>
		</citerefentry>
	  </member>
	  <member>
		<citerefentry>
		  <refentrytitle>radiodns_destroy</refentrytitle>
		  <manvolnum>3</manvolnum>
		</citerefentry>
	  </member>
	  <member>
		<citerefentry>
		  <refentrytitle>radiodns_domain</refentrytitle>
		  <manvolnum>3</manvolnum>
		</citerefentry>
	  </member>
	  <member>
		<citerefentry>
		  <refentrytitle>radiodns_target</refentrytitle>
		  <manvolnum>3</manvolnum>
		</citerefentry>
	  </member>
	  <member>
		<citerefentry>
		  <refentrytitle>radiodns_resolve_target</refentrytitle>
		  <manvolnum>3</manvolnum>
		</citerefentry>
	  </member>
	  <member>
		<citerefentry>
		  <refentrytitle>radiodns_resolve_app</refentrytitle>
		  <manvolnum>3</manvolnum>
		</citerefentry>
	  </member>

	</simplelist>
  </refsection>
</refentry>
